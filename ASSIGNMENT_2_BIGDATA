Execute following queries on "emp" and "dept" dataset using CTE.
 1
 . Find emp with max sal of each dept.
 
 create table emp(
 empno int,
 ename string,
 job string,
 mgr int,
 hire date,
 sal double,
 comm int,
 deptno int
 )
 row format delimited
 fields terminated by ','
 stored as textfile;
 
 load data local inpath
 '/home/sharansh/Desktop/DBDA/BigData/data/emp.csv'
 into table emp;
 
 with max_sal as(
 select max(sal) 
 from emp
 group by deptno
 )
 select ename,sal from emp where sal in (select * from max_sal);
 
 +-------+---------+
| ename | sal     |
+-------+---------+
| BLAKE | 2850.00 |
| SCOTT | 3000.00 |
| KING  | 5000.00 |
| FORD  | 3000.00 |
+-------+---------+

 
 2
 . Find avg of deptwise total sal.
 
 with t1 as
 (select deptno,sum(sal) sum_sal
 from emp
 group by deptno
 )
 select avg(sum_sal) from t1;
 
 --------------+
| avg(sum_sal) |
+--------------+
|  9675.000000 |
+--------------+

 
 3
 . Compare (show side-by-side) sal of each emp with avg sal in his dept and avg sal for his job.
 
 with t1 as (
 select ename,deptno,job,sal from emp
 )
 select ename,deptno,job,sal,round(avg(sal)over(partition by deptno)) deptwise_sal,round(avg(sal) over(partition by job)) jobwise_sal from t1;
 
 +--------+--------+-----------+---------+--------------+-------------+
| ename  | deptno | job       | sal     | deptwise_sal | jobwise_sal |
+--------+--------+-----------+---------+--------------+-------------+
| SCOTT  |     20 | ANALYST   | 3000.00 |         2175 |        3000 |
| FORD   |     20 | ANALYST   | 3000.00 |         2175 |        3000 |
| MILLER |     10 | CLERK     | 1300.00 |         2917 |        1038 |
| SMITH  |     20 | CLERK     |  800.00 |         2175 |        1038 |
| ADAMS  |     20 | CLERK     | 1100.00 |         2175 |        1038 |
| JAMES  |     30 | CLERK     |  950.00 |         1567 |        1038 |
| CLARK  |     10 | MANAGER   | 2450.00 |         2917 |        2758 |
| JONES  |     20 | MANAGER   | 2975.00 |         2175 |        2758 |
| BLAKE  |     30 | MANAGER   | 2850.00 |         1567 |        2758 |
| KING   |     10 | PRESIDENT | 5000.00 |         2917 |        5000 |
| ALLEN  |     30 | SALESMAN  | 1600.00 |         1567 |        1400 |
| WARD   |     30 | SALESMAN  | 1250.00 |         1567 |        1400 |
| MARTIN |     30 | SALESMAN  | 1250.00 |         1567 |        1400 |
| TURNER |     30 | SALESMAN  | 1500.00 |         1567 |        1400 |
+--------+--------+-----------+---------+--------------+-------------+

 
 4
 . Divide emps by category -- Poor < 1500, 1500 <= Middle <= 2500, Rich > 2500. Hint: CASE ... WHEN. Count emps for each category.
 
 with t1 as(
 select ename,case 
 when sal<1500 then 'POOR'
 when sal>2500 then 'RICH'
 else 'MIDDLE'
 end 
 category
 from emp
 )
 select distinct category,count(ename) over(partition by category)
 from t1;
 
 +-----------+------+
| category  | _c1  |
+-----------+------+
| MIDDLE    | 3    |
| POOR      | 6    |
| RICH      | 5    |
+-----------+------+

 
 5
 . Display emps with category (as above), empno, ename, sal and dname.
 
 create table dept(
 deptno int,
 dname string,
 lov string
 )
 row format delimited
 fields terminated by ','
 stored as textfile;
 
 load data local inpath 
 '/home/sharansh/Desktop/DBDA/BigData/data/dept.csv'
 into table dept;
 
 with t as(
 select empno,ename,deptno,sal,case 
 when sal<1500 then 'POOR'
 when sal>2500 then 'RICH'
 else 'MIDDLE'
 end 
 category
 from emp
 )
 select t.empno,t.ename,t.deptno,t.category,t.sal,d.dname
 from dept d
 join t on t.deptno=d.deptno;
 
 +----------+----------+-----------+-------------+---------+-------------+
| t.empno  | t.ename  | t.deptno  | t.category  |  t.sal  |   d.dname   |
+----------+----------+-----------+-------------+---------+-------------+
| 7369     | SMITH    | 20        | POOR        | 800.0   | RESEARCH    |
| 7499     | ALLEN    | 30        | MIDDLE      | 1600.0  | SALES       |
| 7521     | WARD     | 30        | POOR        | 1250.0  | SALES       |
| 7566     | JONES    | 20        | RICH        | 2975.0  | RESEARCH    |
| 7654     | MARTIN   | 30        | POOR        | 1250.0  | SALES       |
| 7698     | BLAKE    | 30        | RICH        | 2850.0  | SALES       |
| 7782     | CLARK    | 10        | MIDDLE      | 2450.0  | ACCOUNTING  |
| 7788     | SCOTT    | 20        | RICH        | 3000.0  | RESEARCH    |
| 7839     | KING     | 10        | RICH        | 5000.0  | ACCOUNTING  |
| 7844     | TURNER   | 30        | MIDDLE      | 1500.0  | SALES       |
| 7876     | ADAMS    | 20        | POOR        | 1100.0  | RESEARCH    |
| 7900     | JAMES    | 30        | POOR        | 950.0   | SALES       |
| 7902     | FORD     | 20        | RICH        | 3000.0  | RESEARCH    |
| 7934     | MILLER   | 10        | POOR        | 1300.0  | ACCOUNTING  |
+----------+----------+-----------+-------------+---------+-------------+

 
 6
 4
 . Count number of emps in each dept for each category (as above).
 
 with t as
 (select ename,deptno,
 case when sal<1500 then 'POOR'
 when sal between 1500 and 2500 then 'MIDDLE'
 else 'RICH'
 end category
 from emp)
select category,deptno,count(ename) 
from t
group by category,deptno
order by deptno;


 above).
