0: jdbc:hive2://localhost:10000/default> create table customers(
. . . . . . . . . . . . . . . . . . . .> customerid int,
. . . . . . . . . . . . . . . . . . . .> name string,
. . . . . . . . . . . . . . . . . . . .> age int,
. . . . . . . . . . . . . . . . . . . .> locationid int
. . . . . . . . . . . . . . . . . . . .> )
. . . . . . . . . . . . . . . . . . . .> row format delimited
. . . . . . . . . . . . . . . . . . . .> fields terminated by ','
. . . . . . . . . . . . . . . . . . . .> stored as textfile;



0: jdbc:hive2://localhost:10000/default> insert into customers values (1, 'John Doe', 30, 1),(2, 'Jane Smith', 25, 2),(3, 'Bob Johnson', 35, 1),(4, 'Alice Brown', 28, 3),(5, 'Charlie Davis', 32, 2);


0: jdbc:hive2://localhost:10000/default> create table products(
. . . . . . . . . . . . . . . . . . . .> productid int,
. . . . . . . . . . . . . . . . . . . .> productname string,
. . . . . . . . . . . . . . . . . . . .> category string,
. . . . . . . . . . . . . . . . . . . .> price decimal(10,2)
. . . . . . . . . . . . . . . . . . . .> )
. . . . . . . . . . . . . . . . . . . .> row format delimited
. . . . . . . . . . . . . . . . . . . .> fields terminated by ','
. . . . . . . . . . . . . . . . . . . .> stored as textfile;


0: jdbc:hive2://localhost:10000/default> insert into products values (1, 'Laptop', 'Electronics', 800.00),(2, 'Smartphone', 'Electronics', 400.00),(3, 'T-shirt', 'Clothing', 20.00),(4, 'Shoes', 'Footwear', 50.00),(5, 'Bookshelf', 'Furniture', 150.00);

0: jdbc:hive2://localhost:10000/default> create table sales (
. . . . . . . . . . . . . . . . . . . .> salesid int,
. . . . . . . . . . . . . . . . . . . .> customerid int,
. . . . . . . . . . . . . . . . . . . .> productid int,
. . . . . . . . . . . . . . . . . . . .> saledata date,
. . . . . . . . . . . . . . . . . . . .> quantity int,
. . . . . . . . . . . . . . . . . . . .> totalamount decimal(10,2)
. . . . . . . . . . . . . . . . . . . .> )
. . . . . . . . . . . . . . . . . . . .> row format delimited
. . . . . . . . . . . . . . . . . . . .> fields terminated by ','
. . . . . . . . . . . . . . . . . . . .> stored as textfile
. . . . . . . . . . . . . . . . . . . .> ;


0: jdbc:hive2://localhost:10000/default> insert into sales values (1, 1, 1, '2023-01-01', 2, 1600.00),(2, 2, 3, '2023-01-02', 3, 60.00),(3, 3, 2, '2023-01-03', 1, 400.00),(4, 4, 4, '2023-02-01', 2, 100.00),(5, 5, 5, '2023-02-02', 1, 150.00);

0: jdbc:hive2://localhost:10000/default> create table locations (
. . . . . . . . . . . . . . . . . . . .> locationid int,
. . . . . . . . . . . . . . . . . . . .> city string,
. . . . . . . . . . . . . . . . . . . .> state string
. . . . . . . . . . . . . . . . . . . .> )
. . . . . . . . . . . . . . . . . . . .> row format delimited
. . . . . . . . . . . . . . . . . . . .> fields terminated by ','
. . . . . . . . . . . . . . . . . . . .> stored as textfile;


0: jdbc:hive2://localhost:10000/default> insert into locations values (1, 'Pune', 'Maharashtra'),(2, 'Mumbai', 'Maharashtra'),(3, 'Bangalore', 'Karnataka'),(4, 'Delhi', 'Delhi'),(5, 'Chennai', 'Tamil Nadu');



A. Retrieve the names of all customers who made a purchase.

select c.name from customers
join sales s using(customerid);


OUTPUT

+----------------+
|     c.name     |
+----------------+
| John Doe       |
| Jane Smith     |
| Bob Johnson    |
| Alice Brown    |
| Charlie Davis  |
+----------------+

Using subqueries

select name from customers where customerid in (select customerid from sales);


B. List the products and their total sales amounts for a given date range.

select p.productid,p.productname,s.totalamount from products p
join sales s using(productid);

+--------------+----------------+----------------+
| p.productid  | p.productname  | s.totalamount  |
+--------------+----------------+----------------+
| 1            | Laptop         | 1600.00        |
| 2            | Smartphone     | 400.00         |
| 3            | T-shirt        | 60.00          |
| 4            | Shoes          | 100.00         |
| 5            | Bookshelf      | 150.00         |
+--------------+----------------+----------------+


C. Find the total sales amount for each product category.

select sum(s.totalamount) totalsales,p.category from sales s
join products p using(productid) group by p.category;

+-------------+--------------+
| totalsales  |  p.category  |
+-------------+--------------+
| 60.00       | Clothing     |
| 2000.00     | Electronics  |
| 100.00      | Footwear     |
| 150.00      | Furniture    |
+-------------+--------------+

D. Identify the customers who made purchases in a speciÔ¨Åc city.

select c.name,l.city from customers c
left join locations l using(locationid);

+----------------+------------+
|     c.name     |   l.city   |
+----------------+------------+
| John Doe       | Pune       |
| Jane Smith     | Mumbai     |
| Bob Johnson    | Pune       |
| Alice Brown    | Bangalore  |
| Charlie Davis  | Mumbai     |
+----------------+------------+


E. Calculate the average age of customers who bought products in the 'Electronics' category.

select avg(c.age)avg_age from customers c
join sales s on c.customerid=s.customerid
join products p on p.productid=s.productid
where p.category='Electronics';

+----------+
| avg_age  |
+----------+
| 32.5     |
+----------+



F. List the top 3 products based on total sales amount.

select p.productname,sum(s.totalamount) from products p
 join sales s on s.productid=p.productid group by p.productname order by sum(s.totalamount) desc limit 3;
 
 +----------------+----------+
| p.productname  |   _c1    |
+----------------+----------+
| Laptop         | 1600.00  |
| Smartphone     | 400.00   |
| Bookshelf      | 150.00   |
+----------------+----------+


G. Find the total sales amount for each month.

select month(saledata) mon,sum(totalamount)total_sales from sales  group by month(saledata) ;

+------+--------------+
| mon  | total_sales  |
+------+--------------+
| 1    | 2060.00      |
| 2    | 250.00       |
+------+--------------+


H. Identify the products with no sales.

select p.productname,s.totalamount from products p
join sales s using(productid) 
where s.totalamount is null;

+----------------+----------------+
| p.productname  | s.totalamount  |
+----------------+----------------+
+----------------+----------------+


I. Calculate the total sales amount for each state.

select l.state,sum(s.totalamount) from sales s
 join customers c using(customerid)
 join locations l on l.locationid=c.locationid
 group by l.state;

+--------------+----------+
|   l.state    |   _c1    |
+--------------+----------+
| Karnataka    | 100.00   |
| Maharashtra  | 2210.00  |
+--------------+----------+


J. Retrieve the customer names and their highest purchase amount.

select c.name,max(s.totalamount)amount from customers c
join sales s using(customerid) group by c.name
order by amount desc limit 1;

+-----------+----------+
|  c.name   |  amount  |
+-----------+----------+
| John Doe  | 1600.00  |
+-----------+----------+
2. Try MySQL classwork of Window functions and CTEs.


create table emp(

)




